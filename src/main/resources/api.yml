openapi: "3.0.0"
info:
  version: 1.0.0
  title: Products
  license:
    name: MIT
paths:
  /product:
    get:
      summary: 获得所有商品信息
      operationId: listProducts
      tags:
        - product
      responses:
        '200':
          description: A paged array of products
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Products"
        default:
          description: unexpected error
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Error"
  /product/{productId}:
    get:
      summary: 查看id为productId的商品详情
      operationId: showProductById
      tags:
        - product
      parameters:
        - name: productId
          in: path
          required: true
          description: The id of the product to retrieve
          schema:
            type: string
      responses:
        '200':
          description: Expected response to a valid request
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Product"
        default:
          description: unexpected error
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Error"
  /product/category/{categoryName}:
    get:
      summary: 获取类型为categoryName的商品列表
      operationId: showProductsByCategory
      tags:
        - product
      parameters:
        - name: categoryName
          in: path
          required: true
          description: 商品类别名称
          schema:
            type: string
      responses:
        '200':
          description: 成功获取该类别的商品列表
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: "#/components/schemas/Product"
        '404':
          description: 该类别不存在或者没有商品属于该类别
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Error"
  /product/uploadProduct:
    post:
      summary: 上传商品接口
      operationId: uploadProduct
      tags:
        - product
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                name:
                  type: string
                price:
                  type: number
                  format: double
                category:
                  type: string
                stock:
                  type: integer
                img:
                  type: string
      responses:
        '200':
          description: 上传成功
          content:
            application/json:
              schema:
                type: object
                properties:
                  code:
                    type: integer
                    example: 1
                  data:
                    type: string
                    example: "Product uploaded successfully."
        default:
          description: 上传失败
          content:
            application/json:
              schema:
                type: object
                properties:
                  code:
                    type: integer
                    example: 0
                  message:
                    type: string
                    example: "Failed to upload product."
  /order:
    get:
      summary: 获取所有订单信息
      operationId: listOrders
      tags:
        - order
      responses:
        '200':
          description: A paged array of orders
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: "#/components/schemas/Order"
        default:
          description: unexpected error
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Error"
    post:
      summary: 提交一个订单
      operationId: createOrder
      tags:
        - order
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/Order"
      responses:
        '200':
          description: Order created successfully
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Order"
        default:
          description: Unexpected error
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Error"
  /order/{orderId}:
    get:
      summary: 获取订单id为orderId的订单详情
      operationId: showOrderById
      tags:
        - order
      parameters:
        - name: orderId
          in: path
          required: true
          description: The id of the order to retrieve
          schema:
            type: string
      responses:
        '200':
          description: Expected response to a valid request
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Order"
        default:
          description: unexpected error
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Error"

#  /search/{keyword}:
#    get:
#      summary: 搜索关键字为keyword的商品
#      operationId: searchProductsByKeyword
#      tags:
#        - product
#      parameters:
#        - name: keyword
#          in: path
#          required: true
#          description: 搜索关键字
#          schema:
#            type: string
#      responses:
#        '200':
#          description: 搜索结果
#          content:
#            application/json:
#              schema:
#                type: array
#                items:
#                  $ref: "#/components/schemas/Product"
#        default:
#          description: unexpected error
#          content:
#            application/json:
#              schema:
#                $ref: "#/components/schemas/Error"

  /login:
    post:
      summary: 用户登录接口
      operationId: loginUser
      tags:
        - authentication
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                username:
                  type: string
                password:
                  type: string
              required:
                - username
                - password
      responses:
        '200':
          description: 登录成功
          content:
            application/json:
              schema:
                type: object
                properties:
                  code:
                    type: integer
                    example: 1
                  data:
                    type: object
                    properties:
                      token:
                        type: string
                        example: "eyJhbGciOiJIUzI1NiJ9.eyJzdWIiOiJleGFtcGxlVXNlciIsInVzZXJJZCI6IjEyMzQ1NiJ9.IZ_7uPnXgdT_cowGstQ3L8lBdRrVh8il_CvM7n4GQV4"
                      userInfo:
                        $ref: "#/components/schemas/User"

        '401':
          description: 登录失败
          content:
            application/json:
              schema:
                type: object
                properties:
                  code:
                    type: integer
                    example: 0
        default:
          description: 未知错误
          content:
            application/json:
              schema:
                type: object
                properties:
                  code:
                    type: integer
                    example: -1
  /register:
    post:
      summary: 用户注册接口
      operationId: registerUser
      tags:
        - authentication
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                username:
                  type: string
                password:
                  type: string
                email:
                  type: string
                address:
                  type: string
              required:
                - username
                - password
      responses:
        '200':
          description: 注册成功
          content:
            application/json:
              schema:
                type: object
                properties:
                  code:
                    type: integer
                    example: 1
        '409':
          description: 用户名已存在
          content:
            application/json:
              schema:
                type: object
                properties:
                  code:
                    type: integer
                    example: 0
        default:
          description: 未知错误
          content:
            application/json:
              schema:
                type: object
                properties:
                  code:
                    type: integer
                    example: -1
  /user:
    post:
      summary: 修改用户信息接口
      operationId: updateUserInfo
      tags:
        - user
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                username:
                  type: string
                password:
                  type: string
                email:
                  type: string
                address:
                  type: string
                img:
                  type: string
              required:
                - username
      responses:
        '200':
          description: 修改成功
          content:
            application/json:
              schema:
                type: object
                properties:
                  code:
                    type: integer
                    example: 1
        '401':
          description: 修改失败
          content:
            application/json:
              schema:
                type: object
                properties:
                  code:
                    type: integer
                    example: 0
  /user/{username}:
    get:
      summary: 获取用户名为username的用户信息
      operationId: getUserInfo
      tags:
        - user
      parameters:
        - name: username
          in: path
          required: true
          description: 用户名
          schema:
            type: string
      responses:
        '200':
          description: 用户信息
          content:
            application/json:
              schema:
                type: object
                properties:
                  code:
                    type: integer
                    example: 1
                  data:
                    $ref: "#/components/schemas/User"
        '404':
          description: 用户不存在
          content:
            application/json:
              schema:
                type: object
                properties:
                  code:
                    type: integer

  /uploadImage:
    post:
      summary: 上传图片接口
      operationId: uploadImage
      tags:
        - image
      requestBody:
        required: true
        content:
          multipart/form-data:
            schema:
              type: object
              properties:
                file:
                  type: string
                  format: binary
      responses:
        '200':
          description: 上传成功
          content:
            application/json:
              schema:
                type: object
                properties:
                  code:
                    type: integer
                    example: 1
                  data:
                    type: string
                    example: "https://example.com/image.jpg"
        default:
          description: 上传失败
          content:
            application/json:
              schema:
                type: object
                properties:
                  code:
                    type: integer
                    example: 0
components:
  schemas:
    Product:
      type: object
      required:
        - id
        - name
      properties:
        id:
          type: string
        price:
          type: number
          format: double
        category:
          type: string
        quantity:
          type: integer
        name:
          type: string
        stock:
          type: integer
        img:
          type: string
    User:
      type: object
      properties:
        username:
          type: string
        password:
          type: string
        email:
          type: string
        address:
          type: string
        img:
          type: string
        balance:
          type: number
          format: double
    Products:
      type: array
      items:
        $ref: "#/components/schemas/Product"
    Order:
      type: object
      properties:
        id:
          type: string
        items:
          type: array
          items:
            type: object
            properties:
              id:
                type: string
              quantity:
                type: integer
      required:
        - items
    Error:
      type: object
      required:
        - code
        - message
      properties:
        code:
          type: integer
          format: int32
        message:
          type: string
