openapi: "3.0.0"
info:
  version: 1.0.0
  title: Products
  license:
    name: MIT
paths:
  /product:
    get:
      summary: List all products
      operationId: listProducts
      tags:
        - product
      responses:
        '200':
          description: A paged array of products
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Products"
        default:
          description: unexpected error
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Error"
  /product/{productId}:
    get:
      summary: Info for a specific product
      operationId: showProductById
      tags:
        - product
      parameters:
        - name: productId
          in: path
          required: true
          description: The id of the product to retrieve
          schema:
            type: string
      responses:
        '200':
          description: Expected response to a valid request
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Product"
        default:
          description: unexpected error
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Error"
  /categories:
    get:
      summary: List all categories
      operationId: listCategories
      tags:
        - categories
      responses:
        '200':
          description: A list of categories
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: "#/components/schemas/Category"
        default:
          description: unexpected error
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Error"
  /settings:
    get:
      summary: 获取设置信息
      operationId: getSettings
      tags:
        - settings
      responses:
        '200':
          description: 返回设置信息
          content:
            application/json:
              schema:
                type: array
                items:
                  type: object
                  properties:
                    settings:
                      type: object
                      properties:
                        app:
                          type: string
                        store:
                          type: string
                        address_one:
                          type: string
                        address_two:
                          type: string
                        contact:
                          type: string
                        tax:
                          type: string
                        symbol:
                          type: string
                        percentage:
                          type: string
                        footer:
                          type: string
                        img:
                          type: string
                    id:
                      type: string
  /order:
    post:
      summary: Create an order
      operationId: createOrder
      tags:
        - order
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/Order"
      responses:
        '200':
          description: Order created successfully
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Order"
        default:
          description: Unexpected error
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Error"

components:
  schemas:
    Product:
      type: object
      required:
        - id
        - name
      properties:
        id:
          type: string
        price:
          type: number
          format: double
        category:
          type: string
        quantity:
          type: integer
        name:
          type: string
        stock:
          type: integer
        img:
          type: string
    Products:
      type: array
      items:
        $ref: "#/components/schemas/Product"
    Category:
      type: object
      properties:
        id:
          type: string
        name:
          type: string
    Order:
      type: object
      properties:
        items:
          type: array
          items:
            type: object
            properties:
              id:
                type: string
              quantity:
                type: integer
      required:
        - items
    Error:
      type: object
      required:
        - code
        - message
      properties:
        code:
          type: integer
          format: int32
        message:
          type: string
